
# Workflow's name
name: release

# Workflow's trigger
on:
  push:
    tags:
      - 'v*.*'

# Workflow's jobs
jobs:
  # job's id
  release:
    # job's name
    name: build and release moon
    
    # the type of machine to run the job on
    runs-on: ${{ matrix.os }}
    
    # create a build matrix for jobs
    strategy:
      matrix:
        os: [windows-vs2019, ubuntu-latest, macos-latest]

    # create steps
    steps:
      - uses: actions/checkout@v2
      - name: Setup premake
        uses: abel0b/setup-premake@v1
      - name: setup windows msbuild
        if: matrix.os == 'windows-vs2019'
        uses: microsoft/setup-msbuild@v1
      - name: build windows
        if: matrix.os == 'windows-vs2019'
        run: |
          premake5.exe vs2019
          msbuild /m Server.sln /p:configuration="release"
      - name: build linux
        if: matrix.os == 'ubuntu-latest'
        run: |
          premake5 gmake
          make -j2 config=release
      - name: build macos
        if: matrix.os == 'macos-latest'
        run: |
          premake5 gmake --cc=clang
          make -j2 config=release
      - name: copy scripts
        shell: bash
        run: |
          mkdir packages
          cp -r lualib packages/
          cp -r service packages/
          cp -r example packages/
      - name: package windows
        if: matrix.os == 'windows-vs2019'
        shell: bash
        run: |
          cp moon.exe packages/
          cd packages
          tar -zcvf ${{ matrix.os }}.tar.gz ./*
      - name: package linux and macosx
        if: matrix.os != 'windows-vs2019'
        shell: bash
        run: |
          cp moon packages/
          cd packages
          tar -zcvf ${{ matrix.os }}.tar.gz ./*
      - uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.os }}
          path: packages/${{ matrix.os }}.tar.gz
      - name: release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: packages/${{ matrix.os }}.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
